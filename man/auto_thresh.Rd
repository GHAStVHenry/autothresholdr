% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/thresh.R
\name{auto_thresh}
\alias{auto_thresh}
\alias{auto_thresh_apply_mask}
\alias{auto_thresh_mask}
\title{Automatically threshold an image.}
\usage{
auto_thresh(int_arr, method)

auto_thresh_mask(int_arr, method)

auto_thresh_apply_mask(int_arr, method, fail = NA)
}
\arguments{
\item{int_arr}{An array (or vector) of \emph{integers}.}

\item{method}{The name of the method you wish to use (e.g. "Huang"). Partial
matching is performed i.e. \code{method = "h"} is enough to get you "Huang"
and \code{method = "in"} is enough to get you "Intermodes".}

\item{fail}{When using \code{auto_thresh_apply_mask}, to what value do you
wish to set the pixels which fail to exceed the threshold.}
}
\value{
\code{auto_thresh} returns an integer, the image threshold value.
  Pixels exceeding this threshold are passed, but pixels at or below this
  level are failed.

  \code{auto_thresh_mask} returns a binarized version of the input, with a
  value of \code{TRUE} at points which exceed the threshold and \code{FALSE}
  at those which do not. This has an attribute "threshold" to tell you what
  the threshold value was.

  \code{auto_thresh_apply_mask} returns the original input masked by the
  threshold, i.e. all points not exceeding the threshold are set to a
  user-defined value (default \code{NA}). This has an attribute "threshold"
  to tell you what the threshold value was.
}
\description{
These functions apply the ImageJ "Auto Threshold" plugin's image thresholding
methods. The available methods are "Default", "Huang", "Intermodes",
"IsoData", "Li", "MaxEntropy", "Mean", "MinError", "Minimum", "Moments",
"Otsu", "Percentile", "RenyiEntropy", "Shanbhag", "Triangle", "Yen". Read
about them at \url{http://imagej.net/Auto_Threshold}.
}

